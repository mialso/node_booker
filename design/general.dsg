            node_booker design doc
        [purpose]:
    <the app is to help user to>
* book node
* find free node
* contact about node
* get notification when a node is freed
* management nodes

        [requirements]:
    [functional]:
* to view all nodes free and booked one
* to book node
* to free booked node
* to get notification about book time expiration
* to get notification about success booking

        [implementation]:
* to work on apache server ver=2.2.1
* to show data in firefox browser ver=38+
    [modules]:
main
    main window workflow
user
    user-related functionality
node
    node-related functionality

        [data model]:
<node>
    - name
    - hardware
    - boards
    - description
    - <reserve>
<user>
    - name
    - email
    - <role>
<reserve>
    - <user>
    - <node>
    - date_start
    - date_end
<role>
    - role_name
    - [allowed_actions]

        [actions]:
    <admin>
node_add|update
user_add|update
    <owner>
reserve_remove
    <regular>
reserve_add
    <guest>
nodes_show

        [flow]:
load modules
    load user_space modules
        user_space modules expose interface to app user(human)
        
    load kernel modules
        kernel modules expose interface to user_space modules

load user data and init user_space user module => user.init
    get token       // for now it is a user name from local storage
    send token to server
    receive user role
    create user_space user object in role context
    
